# –ò–º–ø–æ—Ä—Ç –∏–∑ –Ω–∞—à–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª–∞. –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –≤–Ω–µ—Å–∏—Ç–µ –≤ –Ω–µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
from config_jira import JIRA_URL, TOKEN, auth, vip, team_id
# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å proxy –¥–ª—è Telegram
# from config_jira import REQUEST_KWARGS

from datetime import datetime, timedelta
import requests
import json

from telegram.ext import Updater, CommandHandler
import logging

###############################
# –Ω–∞—à —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—Ö –ª–æ–≥–∏–Ω—ã –∏ —Å–ø–∏—Å–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
team_members = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
headers = {'content-type': 'application/json; charset=UTF-8'}


# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–º–∞–Ω–¥–µ. –ü–æ–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.

def get_team():
    response = requests.get('{}/rest/tempo-teams/2/team/{}/member'.format(JIRA_URL, team_id),
                            params={'teamId': [team_id]}, headers=headers, auth=auth)
    users = json.loads(response.text)
    print(json.dumps(users, indent=4, sort_keys=True))
    for i in users:
        if i['member']['name'] in vip:
            continue
        team_members[i['member']['name']] = {'displayname': i['member']['displayname'], 'timeworked_sec': 0,
                                             'timeworked_str': ''}


def check_current_week(today):
    start_of_week = today - timedelta(days=today.weekday())  # –Ω–∞—á–∞–ª–æ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    end_of_week = start_of_week + timedelta(days=6)  # –∫–æ–Ω–µ—Ü —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª–µ, –æ—Ç–≤–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–µ–∫—É–Ω–¥—ã
    week_time = check_holidays(40, today) * 3600
    # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ –ø–æ–Ω—è—Ç–Ω–æ–º Jira —Ñ–æ—Ä–º–∞—Ç–µ
    start_of_week = start_of_week.strftime('%Y-%m-%d')
    end_of_week = end_of_week.strftime('%Y-%m-%d')

    data = json.dumps(
        {'from': start_of_week, 'to': end_of_week, 'teamId': [team_id]}
    )  # –Ω—É–∂–Ω–æ —Å–ø–∞—Ä—Å–∏—Ç—å json, –∏–Ω–∞—á–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
    response = requests.post('{}/rest/tempo-timesheets/4/worklogs/search'.format(JIRA_URL),
                             data=data, headers=headers, auth=auth)
    if response.status_code != 200:
        print('–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Jira!')
        return '–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Jira! –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'

    timesheets = json.loads(response.text)  # –æ—Ç–≤–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–∞–∫ string, –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å/Json
    print(timesheets)
    for work in timesheets:
        # –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã –≤ —Å–ª–æ–≤–∞—Ä—å —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã
        if work['worker'] not in team_members:
            print('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –ª–æ–≥–∏–Ω–æ–º ' + work['worker'])
            continue
        team_members[work['worker']]['timeworked_sec'] += work['billableSeconds']

    message = "üïë –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Tempo: \n"
    for i in team_members.values():
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
        message += i['displayname'] + '\n' + '<code>' + progress_bar(week_time, i['timeworked_sec']) + "</code>" + '\n'
        i['timeworked_sec'] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –æ–Ω–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Å—É–º–º–∏—Ä–æ–≤–∞–ª–æ—Å—å
    return message


def progress_bar(req_time, act_time):
    if req_time == act_time:
        # –∏–∑–±–µ–≥–∞–µ–º –ª–∏—à–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –µ—Å–ª–∏ —É–∂–µ –≤—Å–µ –≤—Ä–µ–º—è —Å—Ä–∞–∑—É —Å–ø–∏—Å–∞–Ω–æ
        return '[####################' + '] {} / {}—á.'.format(act_time / 3600, req_time / 3600)
    elif req_time < act_time:
        # –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∫—Ç–æ-—Ç–æ —Å–ø–∏—Å–∞–ª –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º –ø–æ–ª–æ–∂–µ–Ω–æ, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
        return '[!!!!!!!!!!!!!!!!!!!!' + '] {} / {}—á.'.format(act_time / 3600, req_time / 3600)
    elif act_time == 0:
        # ... –∏ –µ—Å–ª–∏ –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ø–∏—Å–∞–Ω–æ –≤–æ–æ–±—â–µ
        return '[                    ' + '] {} / {}—á.'.format(act_time / 3600, req_time / 3600)
    one_tick = req_time / 20
    # —Ç–µ–ø–µ—Ä—å –º—ã –∑–Ω–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–º –¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞.
    progress = '['
    empty_spaces = 20
    act_time_cycle = act_time
    while act_time_cycle >= one_tick:
        progress = progress + '#'
        act_time_cycle -= one_tick
        empty_spaces -= 1
    while empty_spaces != 0:
        progress = progress + ' '
        empty_spaces -= 1
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä. –í—Ä–µ–º—è —Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–µ—Å—è—Ç–∏—á–Ω–æ–≥–æ –∑–Ω–∞–∫–∞, –µ—Å–ª–∏ —Å–ø–∏—Å—ã–≤–∞–ª–∏ –º–∏–Ω—É—Ç—ã.
    progress = progress + '] {} / {}—á.'.format(round(act_time / 3600, 1), req_time / 3600)
    return progress


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π
def check_holidays(week_time, today):
    start_of_week = today - timedelta(days=today.weekday())  # –Ω–∞—á–∞–ª–æ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    end_of_week = start_of_week + timedelta(
        days=4)  # –∫–æ–Ω–µ—Ü —Ç–µ–∫—É—â–µ–π –†–ê–ë–û–ß–ï–ô –Ω–µ–¥–µ–ª–∏, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, –ø–æ–ø–∞–¥—é—â–∏–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ
    # –ø–æ–ª—É—á–∞–µ–º id –≤—Å–µ—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
    holiday_ids = requests.get('{}/rest/tempo-core/1/holidayscheme/'.format(JIRA_URL), auth=auth)
    id_array = json.loads(holiday_ids.text)
    ids = []
    for i in range(len(id_array)):
        ids.append(id_array[i]['id'])

    # —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
    for i in ids:
        # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        fixed = requests.get('{}/rest/tempo-core/1/holidayscheme/{}/days/fixed'.format(JIRA_URL, i),
                             auth=auth)
        fixed = json.loads(fixed.text)
        # –∏ –ø–ª–∞–≤—É—á–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        floating = requests.get(
            '{}/rest/tempo-core/1/holidayscheme/{}/days/floating'.format(JIRA_URL, i), auth=auth)
        floating = json.loads(floating.text)

        for f in fixed:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –¥–µ–Ω—å (–æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –±–µ–∑ –≥–æ–¥–∞)
            holiday = datetime.strptime(f['date'], '%d/%b')
            holiday = holiday.replace(year=2020)
            if start_of_week <= holiday <= end_of_week:
                week_time -= convert_holiday_duration(f['duration'])
        for f in floating:
            holiday = datetime.strptime(f['date'], '%d/%b/%y')  # –∞ —ç—Ç–∏ —É–∂–µ —Å –≥–æ–¥–æ–º
            if start_of_week <= holiday <= end_of_week:
                week_time -= convert_holiday_duration(f['duration'])

    return week_time


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ. –ü–æ–∫–∞ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ –ª–∏–±–æ 1 —á–∞—Å, –ª–∏–±–æ 1 –¥–µ–Ω—å (8 —á–∞—Å–æ–≤)
def convert_holiday_duration(dur):
    if dur == '1d':
        return 8
    elif dur == '1h':
        return 1
    return 0


# Debug
get_team()
print(check_current_week(datetime.now()))
print(team_members)

# –§–£–ù–ö–¶–ò–ò, –û–¢–ù–û–°–Ø–©–ò–ï–°–Ø –ö –†–ê–ë–û–¢–ï –ë–û–¢–ê

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ –±–æ—Ç–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)


def start(update, context):
    # –°–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ —é–∑–µ—Ä–æ–º
    update.message.reply_text('Hi!')


def currentweek(update, context):
    reply = check_current_week(datetime.now())
    update.message.reply_html(reply)


def lastweek(update, context):
    reply = check_current_week(datetime.now() - timedelta(days=7))
    update.message.reply_html(reply)


def error(update, context):
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    logger.warning('Update "%s" caused error "%s"', update, context.error)


def main():
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater = Updater(TOKEN,  # request_kwargs=REQUEST_KWARGS,
                      use_context=True)

    # –ü–æ–ª—É—á–∞–µ–º dispatcher –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
    dp = updater.dispatcher

    # –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("currentweek", currentweek))
    dp.add_handler(CommandHandler("lastweek", lastweek))

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error)

    # –ß—Ç–æ-—Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –µ–≥–æ —Ä–∞–±–æ—Ç—ã
    updater.start_polling()

    # –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –¥–µ–ª–∞–µ–º CTRL+C –≤ –∫–æ–Ω—Å–æ–ª–∏
    updater.idle()


if __name__ == '__main__':
    main()
